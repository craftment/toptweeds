const express = require('express');
const axios = require('axios');
const app = express();
const port = 3000;

// 트위터 API Bearer Token
const BEARER_TOKEN = 'YOUR_TWITTER_API_BEARER_TOKEN';

// 트위터에서 동영상 트윗을 가져오는 API
app.get('/api/trending', async (req, res) => {
  try {
    // 페이지 번호 가져오기 (기본값: 1)
    const page = parseInt(req.query.page) || 1;
    const maxResults = 100; // 트위터에서 가져올 최대 트윗 개수
    const tweetsPerPage = 10; // 한 페이지에 표시할 트윗 수
    const startIndex = (page - 1) * tweetsPerPage;

    const url = 'https://api.twitter.com/2/tweets/search/recent?query=filter:videos&max_results=100';
    const response = await axios.get(url, {
      headers: {
        'Authorization': `Bearer ${BEARER_TOKEN}`
      }
    });

    // 응답 받은 트윗 데이터를 좋아요 수 기준으로 정렬
    const sortedTweets = response.data.data.sort((a, b) => b.public_metrics.like_count - a.public_metrics.like_count);

    // 페이지에 맞는 트윗 데이터를 반환 (10개씩)
    const paginatedTweets = sortedTweets.slice(startIndex, startIndex + tweetsPerPage);

    // 1등부터 100등까지 데이터를 반환
    res.json({ data: paginatedTweets, totalPages: Math.ceil(sortedTweets.length / tweetsPerPage) });
  } catch (error) {
    console.error('Error fetching tweets:', error);
    res.status(500).send('Failed to fetch tweets');
  }
});

// 정적 파일 서빙
app.use(express.static('public'));

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});
